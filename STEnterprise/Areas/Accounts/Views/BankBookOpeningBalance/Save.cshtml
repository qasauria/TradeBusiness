
@model STEnterprise.Areas.Accounts.Models.BankBookOpeningBalance

@{
    ViewBag.Title = "Bank Book Opening Balance";
    Layout = "~/Views/Shared/_Layout.cshtml";

}


<h3 style="padding-left:220px">Bank Book Opening Balance Entry</h3>
<hr />

@using (Html.BeginForm("Save", "BankBookOpeningBalance", FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.AntiForgeryToken()

    if (Model != null && Model.BankBookOpeningBalnceId > 0)
    {
        @Html.HiddenFor(d => d.BankBookOpeningBalnceId)
    }

    <div class="form-group">
        @Html.LabelFor(d => d.BankBookOpeningBalnceDate, new { @class = "control-label col-sm-2" })
        <div class="col-sm-3">
            @Html.TextBoxFor(d => d.BankBookOpeningBalnceDate, new { @class = "form-control", id = "BankBookOpeningBalnceDate" })
            @Html.ValidationMessageFor(d => d.BankBookOpeningBalnceDate, "", new { @class = "text-danger", @style = "color:red" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(d => d.BankName, new { @class = "control-label col-sm-2" })
        <div class="col-sm-3">
            @Html.DropDownList("BankName", new SelectList(ViewBag.bankName, "BankDetailId", "BankName"), "-- Select Bank Name --", new { @class = "form-control", id = "BankName" })
            @Html.ValidationMessageFor(d => d.BankName, "", new { @class = "text-danger", @style = "color:red" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(d => d.AccountNumber, new { @class = "control-label col-sm-2" })
        <div class="col-sm-3">
            <input type="text" name="AccountNumber" id="AccountNumber" class="AccountNumber form-control" />
            @Html.ValidationMessageFor(d => d.AccountNumber, "", new { @class = "text-danger", @style = "color:red" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(d => d.Amount, new { @class = "control-label col-sm-2" })
        <div class="col-sm-3">
            @Html.TextBoxFor(b => b.Amount, new { @class = "form-control", id = "Ammount", @onkeypress = "return IsDouble(event);" })
            @Html.ValidationMessageFor(d => d.Amount, "", new { @class = "text-danger", @style = "color:red" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(d => d.Remarks, new { @class = "control-label col-sm-2" })
        <div class="col-sm-3">
            @Html.TextAreaFor(b => b.Remarks, new { @class = "form-control" })
            @Html.ValidationMessageFor(d => d.Remarks, "", new { @class = "text-danger", @style = "color:red" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-sm-10 col-sm-offset-2">
            <button type="submit" class="btn btn-primary">Save</button>
        </div>
    </div>

}




<script type="text/javascript">
    $(document).ready(function () {
        $(function () {
            $('#BankBookOpeningBalnceDate').datepicker({ dateFormat: 'dd/MM/yy', type: Text }).click(function () { $(this).focus(); });
        });

        $('input[type=date]').each(function () {
            this.type = "text";
        });

        $("#BankName").change(function () {
            var BankName = $("#BankName").val();
            $("#AccountNumber").empty();
                    var json = {
                        BankName: BankName
                    };
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("GetAccountNumberByBankName", "BankBookOpeningBalance")',
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify(json),
                        success: function (data) {
                            $("#AccountNumber").val(data.AccountNumber);
                        }
                    });

                });
    });
</script>
<script type="text/javascript">
    function IsDouble(evt) {
        evt = (evt) ? evt : window.event
        var charCode = (evt.which) ? evt.which : evt.keyCode

        if (charCode > 31 && (charCode < 48 || charCode > 57) && charCode != 46) {
            return false
        }
        else if (charCode == 13) {
            return false;
        }
        status = ""
        return true
    }
</script>